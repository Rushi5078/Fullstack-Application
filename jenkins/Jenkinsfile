pipeline {
  agent any

  // provide the target host as a parameter when you run the job
  parameters {
    string(name: 'FRONTEND_HOST', defaultValue: '', description: 'IP or hostname of the frontend server (e.g. 1.2.3.4)')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Frontend') {
      steps {
        dir('frontend') {
          // ensure node/npm available to the Jenkins agent
          sh 'node --version || { echo "node not found"; exit 1; }'
          sh 'npm --version || { echo "npm not found"; exit 1; }'

          sh 'npm ci'
          sh 'npm run build'
          sh 'rm -rf ../frontend_build || true && cp -r build ../frontend_build'
        }
      }
    }

    stage('Deploy Frontend') {
      steps {
        script {
          if (!params.FRONTEND_HOST?.trim()) {
            error "FRONTEND_HOST parameter is empty. Provide the target host when starting the job."
          }
        }

        withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
          sh '''
            rsync -avz -e "ssh -i $SSH_KEY -o StrictHostKeyChecking=no" frontend_build/ ${SSH_USER}@${FRONTEND_HOST}:/tmp/frontend_build/
            ssh -i $SSH_KEY -o StrictHostKeyChecking=no ${SSH_USER}@${FRONTEND_HOST} bash -lc "
              sudo rm -rf /usr/share/nginx/html/* || true
              sudo mv /tmp/frontend_build/* /usr/share/nginx/html/ || true
              # adjust owner if your nginx user is different (nginx or www-data)
              sudo chown -R nginx:nginx /usr/share/nginx/html || true
              sudo nginx -t && sudo systemctl reload nginx || sudo systemctl restart nginx || true
            "
          '''
        }
      }
    }

    stage('Smoke Test') {
      steps {
        echo "Frontend URL: http://${params.FRONTEND_HOST}"
        sh "curl -sS --max-time 10 http://${params.FRONTEND_HOST}/ || true"
      }
    }
  }

  post {
    success { echo "Frontend deployed to ${params.FRONTEND_HOST}" }
    failure { echo "Frontend deploy failed â€” check console output" }
  }
}
