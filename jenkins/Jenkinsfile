pipeline {
  agent any

  environment {
    // set FRONTEND_HOST either here or in the Jenkins job config / pipeline parameters
    // FRONTEND_HOST = '1.2.3.4'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Frontend') {
      steps {
        dir('frontend') {
          // require node & npm installed on the Jenkins agent
          sh 'node --version || { echo "node not found"; exit 1; }'
          sh 'npm --version || { echo "npm not found"; exit 1; }'

          sh 'npm ci'
          sh 'npm run build'
          // copy build to workspace root for deploy stage
          sh 'rm -rf ../frontend_build || true && cp -r build ../frontend_build'
        }
      }
    }

    stage('Deploy Frontend') {
      steps {
        // expects an SSH credential (username + private key) with id 'ec2-ssh-key'
        withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
          // FRONTEND_HOST must be set in Jenkins job as env var or replaced above
          sh '''
            if [ -z "${FRONTEND_HOST}" ]; then
              echo "ERROR: FRONTEND_HOST is not set"; exit 1
            fi

            rsync -avz -e "ssh -i $SSH_KEY -o StrictHostKeyChecking=no" frontend_build/ ${SSH_USER}@${FRONTEND_HOST}:/tmp/frontend_build/
            ssh -i $SSH_KEY -o StrictHostKeyChecking=no ${SSH_USER}@${FRONTEND_HOST} bash -lc "
              sudo rm -rf /usr/share/nginx/html/* || true
              sudo mv /tmp/frontend_build/* /usr/share/nginx/html/ || true
              # adjust owner if your nginx user differs (e.g., www-data)
              sudo chown -R nginx:nginx /usr/share/nginx/html || true
              sudo nginx -t && sudo systemctl reload nginx || sudo systemctl restart nginx || true
            "
          '''
        }
      }
    }

    stage('Smoke Test') {
      steps {
        echo "Frontend URL: http://${FRONTEND_HOST}"
        sh "curl -sS --max-time 10 http://${FRONTEND_HOST}/ || true"
      }
    }
  }

  post {
    success { echo "Frontend deployed to ${FRONTEND_HOST}" }
    failure { echo "Frontend deploy failed â€” check console output" }
  }
}
